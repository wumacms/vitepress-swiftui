import{_ as t,c as i,o,ag as e}from"./chunks/framework.ymCRTBvy.js";const u=JSON.parse('{"title":"SwiftUI 组件库概览","description":"","frontmatter":{},"headers":[],"relativePath":"components/overview.md","filePath":"components/overview.md"}'),a={name:"components/overview.md"};function l(n,r,s,g,h,d){return o(),i("div",null,r[0]||(r[0]=[e('<h1 id="swiftui-组件库概览" tabindex="-1">SwiftUI 组件库概览 <a class="header-anchor" href="#swiftui-组件库概览" aria-label="Permalink to &quot;SwiftUI 组件库概览&quot;">​</a></h1><p>SwiftUI 提供了丰富的 UI 组件，能够满足绝大多数应用的界面需求。为了提高开发效率，我们将常用组件进行归类整理，方便你在开发中快速查找与复用。</p><hr><h2 id="🔤-输入类组件" tabindex="-1">🔤 输入类组件 <a class="header-anchor" href="#🔤-输入类组件" aria-label="Permalink to &quot;🔤 输入类组件&quot;">​</a></h2><ul><li><strong>TextField</strong>：单行文本输入框，支持占位符、绑定状态等</li><li><strong>SecureField</strong>：密码输入框，内容自动隐藏</li><li><strong>TextEditor</strong>：多行文本编辑器，适合笔记、评论等内容输入</li></ul><hr><h2 id="🔘-控件类组件" tabindex="-1">🔘 控件类组件 <a class="header-anchor" href="#🔘-控件类组件" aria-label="Permalink to &quot;🔘 控件类组件&quot;">​</a></h2><ul><li><strong>Button</strong>：按钮，支持各种样式、图标、操作绑定</li><li><strong>Toggle</strong>：开关，用于布尔值切换</li><li><strong>Picker</strong>：选择器，适合性别、分类等选项</li><li><strong>Slider</strong>：滑动条，常用于音量、亮度调整</li><li><strong>Stepper</strong>：步进器，用于数值加减控制</li></ul><hr><h2 id="📄-显示类组件" tabindex="-1">📄 显示类组件 <a class="header-anchor" href="#📄-显示类组件" aria-label="Permalink to &quot;📄 显示类组件&quot;">​</a></h2><ul><li><strong>Text</strong>：显示文本内容，支持字体样式、颜色等修饰</li><li><strong>Image</strong>：显示本地或网络图片，支持缩放、圆角等效果</li><li><strong>ProgressView</strong>：进度指示器，可用于加载状态展示</li><li><strong>Label</strong>：图标 + 文本组合组件，适合列表项或按钮标题</li></ul><hr><h2 id="📚-布局类组件" tabindex="-1">📚 布局类组件 <a class="header-anchor" href="#📚-布局类组件" aria-label="Permalink to &quot;📚 布局类组件&quot;">​</a></h2><ul><li><strong>VStack / HStack / ZStack</strong>：垂直、水平、重叠布局</li><li><strong>Spacer</strong>：自动填充空白空间，用于对齐和排版</li><li><strong>Divider</strong>：分割线</li><li><strong>GeometryReader</strong>：获取视图几何信息，实现响应式布局</li></ul><hr><h2 id="🧱-容器类组件" tabindex="-1">🧱 容器类组件 <a class="header-anchor" href="#🧱-容器类组件" aria-label="Permalink to &quot;🧱 容器类组件&quot;">​</a></h2><ul><li><strong>List</strong>：列表视图，支持静态或动态数据展示</li><li><strong>Form</strong>：表单视图，自动添加输入元素间距</li><li><strong>NavigationStack</strong>：页面导航容器</li><li><strong>ScrollView</strong>：滚动视图，支持垂直或水平滑动</li></ul><hr><h2 id="✅-使用建议" tabindex="-1">✅ 使用建议 <a class="header-anchor" href="#✅-使用建议" aria-label="Permalink to &quot;✅ 使用建议&quot;">​</a></h2><ul><li>尽量使用系统提供的组件，保证一致性与系统适配</li><li>为常用组件封装自定义视图，提高复用性与可维护性</li><li>通过 <code>.modifier()</code> 封装通用样式，减少重复代码</li></ul><hr><p>你可以在左侧目录中选择任意组件，查看更多使用示例与代码演示。</p>',22)]))}const m=t(a,[["render",l]]);export{u as __pageData,m as default};
